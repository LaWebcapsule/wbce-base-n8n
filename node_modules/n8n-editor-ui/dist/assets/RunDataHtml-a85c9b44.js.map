{"version":3,"file":"RunDataHtml-a85c9b44.js","sources":["../../src/components/RunDataHtml.vue"],"sourcesContent":["<template>\n\t<iframe class=\"__html-display\" :srcdoc=\"html\" />\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue';\nimport sanitizeHtml, { defaults, type IOptions as SanitizeOptions } from 'sanitize-html';\nimport type { INodeExecutionData } from 'n8n-workflow';\n\nconst sanitizeOptions: SanitizeOptions = {\n\tallowVulnerableTags: false,\n\tenforceHtmlBoundary: false,\n\tdisallowedTagsMode: 'discard',\n\tallowedTags: [...defaults.allowedTags, 'style', 'img', 'title'],\n\tallowedAttributes: {\n\t\t...defaults.allowedAttributes,\n\t\t'*': ['class', 'style'],\n\t},\n\ttransformTags: {\n\t\thead: '',\n\t},\n};\n\nexport default {\n\tname: 'RunDataHtml',\n\tprops: {\n\t\tinputData: {\n\t\t\ttype: Array as PropType<INodeExecutionData[]>,\n\t\t},\n\t},\n\tcomputed: {\n\t\thtml() {\n\t\t\tconst markup = (this.inputData?.[0].json.html as string) ?? '';\n\t\t\treturn sanitizeHtml(markup, sanitizeOptions);\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"scss\">\n.__html-display {\n\twidth: 100%;\n\theight: 100%;\n}\n</style>\n"],"names":["sanitizeOptions","defaults","_sfc_main","markup","_a","sanitizeHtml","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock"],"mappings":"gTASA,MAAMA,EAAmC,CACxC,oBAAqB,GACrB,oBAAqB,GACrB,mBAAoB,UACpB,YAAa,CAAC,GAAGC,WAAS,YAAa,QAAS,MAAO,OAAO,EAC9D,kBAAmB,CAClB,GAAGA,EAAS,SAAA,kBACZ,IAAK,CAAC,QAAS,OAAO,CACvB,EACA,cAAe,CACd,KAAM,EACP,CACD,EAEeC,EAAA,CACd,KAAM,cACN,MAAO,CACN,UAAW,CACV,KAAM,KACP,CACD,EACA,SAAU,CACT,MAAO,OACN,MAAMC,IAAUC,EAAA,KAAK,YAAL,YAAAA,EAAiB,GAAG,KAAK,OAAmB,GACrD,OAAAC,EAAaF,EAAQH,CAAe,CAC5C,CACD,CACD,qBAnCc,SAAAM,EAACC,EAAgBC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CAAQ,OAAAC,EAAA,EAAMC,EAAA,SAAA,CAAA,MAAA"}