import type { IUser, IUserSettings } from 'n8n-workflow';
import { Role } from './Role';
import type { SharedWorkflow } from './SharedWorkflow';
import type { SharedCredentials } from './SharedCredentials';
import { WithTimestamps } from './AbstractEntity';
import type { IPersonalizationSurveyAnswers } from '../../Interfaces';
import type { AuthIdentity } from './AuthIdentity';
export declare const MIN_PASSWORD_LENGTH = 8;
export declare const MAX_PASSWORD_LENGTH = 64;
export declare class User extends WithTimestamps implements IUser {
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    password: string;
    personalizationAnswers: IPersonalizationSurveyAnswers | null;
    settings: IUserSettings | null;
    globalRole: Role;
    globalRoleId: string;
    authIdentities: AuthIdentity[];
    sharedWorkflows: SharedWorkflow[];
    sharedCredentials: SharedCredentials[];
    disabled: boolean;
    preUpsertHook(): void;
    apiKey?: string | null;
    isPending: boolean;
    computeIsPending(): void;
    isOwner: boolean;
    computeIsOwner(): void;
}
