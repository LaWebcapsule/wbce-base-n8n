import type { INode } from 'n8n-workflow';
export declare function isWorkflowIdValid(id: string | null | undefined): boolean;
export declare const findSubworkflowStart: (nodes: INode[]) => INode;
export declare const findCliWorkflowStart: (nodes: INode[]) => INode;
export declare const alphabetizeKeys: (obj: INode) => Partial<INode>;
export declare const separate: <T>(array: T[], test: (element: T) => boolean) => T[][];
export declare const webhookNotFoundErrorMessage: (path: string, httpMethod?: string, webhookMethods?: string[]) => string;
export declare const toError: (maybeError: unknown) => Error;
export declare function isStringArray(value: unknown): value is string[];
export declare const isIntegerString: (value: string) => boolean;
export declare function isObjectLiteral(item: unknown): item is {
    [key: string]: string;
};
