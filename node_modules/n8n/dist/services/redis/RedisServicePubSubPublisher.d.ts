import type { AbstractEventMessage } from '../../eventbus/EventMessageClasses/AbstractEventMessage';
import type { RedisServiceCommandObject, RedisServiceWorkerResponseObject } from './RedisServiceCommands';
import { RedisServiceBaseSender } from './RedisServiceBaseClasses';
export declare class RedisServicePubSubPublisher extends RedisServiceBaseSender {
    init(senderId?: string): Promise<void>;
    publish(channel: string, message: string): Promise<void>;
    publishToEventLog(message: AbstractEventMessage): Promise<void>;
    publishToCommandChannel(message: RedisServiceCommandObject): Promise<void>;
    publishToWorkerChannel(message: RedisServiceWorkerResponseObject): Promise<void>;
}
