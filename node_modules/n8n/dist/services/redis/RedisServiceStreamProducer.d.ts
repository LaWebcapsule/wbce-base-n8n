import type { RedisValue } from 'ioredis';
import type { AbstractEventMessage } from '../../eventbus/EventMessageClasses/AbstractEventMessage';
import type { RedisServiceCommandObject, RedisServiceWorkerResponseObject } from './RedisServiceCommands';
import { RedisServiceBaseSender } from './RedisServiceBaseClasses';
export declare class RedisServiceStreamProducer extends RedisServiceBaseSender {
    init(senderId?: string): Promise<void>;
    add(streamName: string, values: RedisValue[]): Promise<void>;
    addToEventStream(message: AbstractEventMessage): Promise<void>;
    addToCommandChannel(message: RedisServiceCommandObject): Promise<void>;
    addToWorkerChannel(message: RedisServiceWorkerResponseObject): Promise<void>;
}
