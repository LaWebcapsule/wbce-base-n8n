import { CacheService } from './cache.service';
import { SharedWorkflowRepository } from '../databases/repositories';
import type { User } from '../databases/entities/User';
import { RoleService } from './role.service';
import { UserService } from './user.service';
import type { ListQuery } from '../requests';
import type { Role } from '../databases/entities/Role';
export declare class OwnershipService {
    private cacheService;
    private userService;
    private roleService;
    private sharedWorkflowRepository;
    constructor(cacheService: CacheService, userService: UserService, roleService: RoleService, sharedWorkflowRepository: SharedWorkflowRepository);
    getWorkflowOwnerCached(workflowId: string): Promise<User>;
    addOwnedBy(workflow: ListQuery.Workflow.WithSharing, workflowOwnerRole: Role): ListQuery.Workflow.WithOwnership;
}
