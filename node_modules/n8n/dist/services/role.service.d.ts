import { RoleRepository, SharedWorkflowRepository } from '../databases/repositories';
import { CacheService } from './cache.service';
export declare class RoleService {
    private roleRepository;
    private sharedWorkflowRepository;
    private cacheService;
    constructor(roleRepository: RoleRepository, sharedWorkflowRepository: SharedWorkflowRepository, cacheService: CacheService);
    populateCache(): Promise<void>;
    private findCached;
    private roles;
    private isValid;
    findGlobalOwnerRole(): Promise<import("../databases/entities/Role").Role>;
    findGlobalMemberRole(): Promise<import("../databases/entities/Role").Role>;
    findWorkflowOwnerRole(): Promise<import("../databases/entities/Role").Role>;
    findWorkflowEditorRole(): Promise<import("../databases/entities/Role").Role>;
    findCredentialOwnerRole(): Promise<import("../databases/entities/Role").Role>;
    findCredentialUserRole(): Promise<import("../databases/entities/Role").Role>;
    findRoleByUserAndWorkflow(userId: string, workflowId: string): Promise<import("../databases/entities/Role").Role | undefined>;
}
