import { SourceControlPreferences } from './types/sourceControlPreferences';
import type { ValidationError } from 'class-validator';
export declare class SourceControlPreferencesService {
    private _sourceControlPreferences;
    private sshKeyName;
    private sshFolder;
    private gitFolder;
    constructor();
    get sourceControlPreferences(): SourceControlPreferences;
    set sourceControlPreferences(preferences: Partial<SourceControlPreferences>);
    isSourceControlSetup(): string | false;
    getPublicKey(): string;
    hasKeyPairFiles(): boolean;
    deleteKeyPairFiles(): Promise<void>;
    generateAndSaveKeyPair(): Promise<SourceControlPreferences>;
    isBranchReadOnly(): boolean;
    isSourceControlConnected(): boolean;
    isSourceControlLicensedAndEnabled(): boolean;
    getBranchName(): string;
    getPreferences(): SourceControlPreferences;
    validateSourceControlPreferences(preferences: Partial<SourceControlPreferences>, allowMissingProperties?: boolean): Promise<ValidationError[]>;
    setPreferences(preferences: Partial<SourceControlPreferences>, saveToDb?: boolean): Promise<SourceControlPreferences>;
    loadFromDbAndApplySourceControlPreferences(): Promise<SourceControlPreferences | undefined>;
}
