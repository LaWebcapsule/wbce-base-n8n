import type express from 'express';
import type { IWorkflowExecuteAdditionalData, IHttpRequestMethods, Workflow, WorkflowActivateMode, WorkflowExecuteMode } from 'n8n-workflow';
import { ActiveWebhooks } from './ActiveWebhooks';
import type { IResponseCallbackData, IWebhookManager, IWorkflowDb, WebhookRequest } from './Interfaces';
import { Push } from './push';
export declare class TestWebhooks implements IWebhookManager {
    private activeWebhooks;
    private push;
    private testWebhookData;
    constructor(activeWebhooks: ActiveWebhooks, push: Push);
    executeWebhook(request: WebhookRequest, response: express.Response): Promise<IResponseCallbackData>;
    getWebhookMethods(path: string): Promise<IHttpRequestMethods[]>;
    needsWebhookData(workflowData: IWorkflowDb, workflow: Workflow, additionalData: IWorkflowExecuteAdditionalData, mode: WorkflowExecuteMode, activation: WorkflowActivateMode, sessionId?: string, destinationNode?: string): Promise<boolean>;
    cancelTestWebhook(workflowId: string): boolean;
    removeAll(): Promise<void>;
}
